'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _timm = require('timm');

var DEP_TYPES = ['dependencies', 'devDependencies', 'peerDependencies', 'optionalDependencies'];

var removeInternalLinks = function removeInternalLinks(prevSpecs, pkgNames, linkPattern) {
  var removedPackagesByType = {};
  var allRemovedPackages = {};
  var regex = linkPattern ? new RegExp(linkPattern) : null;

  var nextSpecs = prevSpecs;
  DEP_TYPES.forEach(function (type) {
    var prevDeps = nextSpecs[type];
    if (prevDeps == null) return;
    var nextDeps = prevDeps;
    Object.keys(prevDeps).forEach(function (name) {
      // Is package to be removed? Only if it belongs to the internal
      // subpackage list (`pkgNames`) or it matches the custom `linkPattern`
      var fRemove = pkgNames.indexOf(name) >= 0 || regex != null && regex.test(name);
      if (!fRemove) return;
      var version = prevDeps[name];
      if (version == null) return;
      nextDeps = (0, _timm.omit)(nextDeps, [name]);
      if (!removedPackagesByType[type]) removedPackagesByType[type] = {};
      removedPackagesByType[type][name] = version;
      allRemovedPackages[name] = version;
    });
    nextSpecs = (0, _timm.set)(nextSpecs, type, nextDeps);
  });

  return {
    nextSpecs: nextSpecs,
    removedPackagesByType: removedPackagesByType,
    allRemovedPackages: allRemovedPackages
  };
};

exports.default = removeInternalLinks;